#!/usr/bin/env node


// Express can launch a www executable to handle certain tasks.
// www goes in bin (sometimes .bin to keep it hidden)

// This way, we can set certain properties here
// rather than having them take up space in server.js.
var debug = require('debug')('express-example');

// we bring in the app we exported from server.js
var app = require('../server');

// we bring in the models we exported with index.js
var models = require("../models");






app.get('/', function(req,res) {
  res.render('index',{title: 'Computer not working?'})
})

app.get('/contact', function(req,res) {
  res.render('contact')
})

app.post('/contact/send', function(req,res) {
  var transporter = nodeMail.createTransport({
    service: 'Gmail',
    auth: {
      user: 'femichelletest@gmail.com',
      pass: 'femichelle'
    }
  })

  var mailOptions = {
    from:     'UserEmail <UserEmail@hotmail.com>',
    to:       'mluo0301@gmail.com',
    subject:  'Website submission',
    text:     'you have a submission with the following... Name: '+req.body.name+'Email:'+req.body.email+'Message: '+req.body.message,
    html:     '<p>you have a submission with the following...</p><ul><li>Name:'+req.body.name+'</li><li>Email:'+req.body.email+'<li>Message:'+req.body.message+'</li></li></ul>'
  }

  transporter.sendMail(mailOptions, function(err,info) {
    if(err) {
      console.log(err)
      res.redirect('/')
    }else {
      console.log('Message send'+info.respone)
      res.redirect('/')
    }
  })
})






// we set the port of the app
app.set('port', process.env.PORT || 3000);


// we sync the models with our db 
// (thus creating the apropos tables)
models.sequelize.sync().then(function () {
	// set our app to listen to the port we set above
  var server = app.listen(app.get('port'), function() {
  	// then save a log of the listening to our debugger.
    debug('Express server listening on port ' + server.address().port);
  });
});
